/****************************************************************************
**
** Copyright (C) 2012 Digia Plc and/or its subsidiary(-ies).
** Contact: http://www.qt-project.org/legal
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and Digia.  For licensing terms and
** conditions see http://qt.digia.com/licensing.  For further information
** use the contact form at http://qt.digia.com/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.  Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: http://www.gnu.org/copyleft/fdl.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \page qtquickcontrols-index.html
    \title Qt Quick Controls

    \brief The Qt Quick Controls module provides a set of UI controls for Qt Quick.

    The Qt Quick Controls module provides a set of controls that can be used to
    build complete interfaces in Qt Quick.

    The module is new in Qt 5.1 and requires \l{Qt Quick} 2.1.

    \image qtquickcontrols-example-gallery.png

    \section1 Getting Started

    The QML types can be imported into your application using the following import statement in your \c {.qml} file.

    \code
     import QtQuick.Controls 1.0
    \endcode

    A basic example of a QML file that makes use of controls is shown here:

    \code
    import QtQuick.Controls 1.0

    ApplicationWindow {
        title: "My Application"

        Button {
            text: "Push Me"
            anchors.centerIn: parent
        }
    }
    \endcode

    \section2 Setting Up Controls from C++

    While we traditionally have used a QQuickView window to display QML files
    in a C++ application, doing this means you can only set window properties from C++.

    With Qt Quick Controls, declare an ApplicationWindow as the root item of your application and launch it by using the
    QQmlApplicationEngine instead. This ensures that you can control top level window properties from QML.

    A basic example of a source file that makes use of controls is shown here:

    \code
    #include <QApplication>
    #include <QQmlApplicationEngine>

    int main(int argc, char *argv[])
    {
        QApplication app(argc, argv);
        QQmlApplicationEngine engine("main.qml");
        return app.exec();
    }
    \endcode

    \note We are using QApplication and not QGuiApplication in this example.
    Though you can use QGuiApplication instead, doing this will eliminate platform-dependent styling.
    This is because it is relying on the widget module to provide the native look and feel.

    \section1 Application Window
    Components used to describe the basic window properties of an application.
    \annotatedlist applicationwindow

    \section1 Navigation and Views
    Views typically let the user manage or present other components in a layout.
    \annotatedlist views

    \section1 Controls
    Controls are typically items that are used to present or receive input from the user.
    \annotatedlist controls

    \section1 Menus
    Types that can be used to build menus.
    \annotatedlist menus

    \section1 Related information

    \section2 Guides
     \list
      \li \l{Qt Quick Controls Overview}
     \endlist

    \section2 Reference
     \list
      \li \l{Qt Quick Controls QML Types}{Qt Quick Controls QML Types}
     \endlist

    \section2 Examples
     \list
      \li \l{Qt Quick Controls Examples}
     \endlist

    \section2 Styles
    \list
     \li \l {Qt Quick Controls Styles}
    \endlist

    \section2 Layouts
    \list
     \li \l {Qt Quick Layouts}
    \endlist

*/
